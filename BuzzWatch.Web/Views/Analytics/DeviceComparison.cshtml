@model BuzzWatch.Web.Models.DeviceComparisonViewModel
@{
    ViewData["Title"] = "Device Comparison";
}

<div class="container">
    <div class="mb-4">
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i> Back to Analytics
        </a>
    </div>
    
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Device Comparison</h4>
            <span class="badge bg-primary">@Model.MetricDisplayName</span>
        </div>
        <div class="card-body">
            <div class="row mb-4">
                <div class="col-md-8">
                    <form asp-action="DeviceComparison" method="get" class="d-flex gap-2">
                        <input type="hidden" name="device1Id" value="@Model.Device1.Id" />
                        <input type="hidden" name="device2Id" value="@Model.Device2.Id" />
                        
                        <select name="metric" class="form-select form-select-sm" onchange="this.form.submit()">
                            <option value="temperature" selected="@(Model.SelectedMetric == "temperature")">Temperature</option>
                            <option value="humidity" selected="@(Model.SelectedMetric == "humidity")">Humidity</option>
                            <option value="weight" selected="@(Model.SelectedMetric == "weight")">Weight</option>
                        </select>
                        
                        <select name="timeRange" class="form-select form-select-sm" onchange="this.form.submit()">
                            <option value="24h" selected="@(Model.SelectedTimeRange == "24h")">Last 24 Hours</option>
                            <option value="7d" selected="@(Model.SelectedTimeRange == "7d")">Last 7 Days</option>
                            <option value="30d" selected="@(Model.SelectedTimeRange == "30d")">Last 30 Days</option>
                        </select>
                    </form>
                </div>
                <div class="col-md-4 text-end">
                    <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-x-circle me-1"></i> New Comparison
                    </a>
                </div>
            </div>
            
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card h-100">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <span class="text-primary">@Model.Device1.Name</span>
                            </h5>
                            <span class="badge @(Model.Device1.Status == "Online" ? "bg-success" : "bg-secondary")">
                                @Model.Device1.Status
                            </span>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <span class="text-muted">Location:</span> @Model.Device1.Location
                            </div>
                            <div class="mb-3">
                                <span class="text-muted">Last seen:</span> @Model.Device1.LastSeen.ToString("g")
                            </div>
                            
                            <div class="text-center p-3 bg-light rounded">
                                <h3 class="mb-0">@(Model.Device1Average?.ToString("F2") ?? "--") @Model.MetricDisplayName.Split(' ')[1]</h3>
                                <div class="text-muted">Average</div>
                            </div>
                            
                            <div class="mt-3 row text-center">
                                <div class="col-6">
                                    <div class="fw-bold">@(Model.Device1Min?.ToString("F2") ?? "--") @Model.MetricDisplayName.Split(' ')[1]</div>
                                    <div class="text-muted small">Min</div>
                                </div>
                                <div class="col-6">
                                    <div class="fw-bold">@(Model.Device1Max?.ToString("F2") ?? "--") @Model.MetricDisplayName.Split(' ')[1]</div>
                                    <div class="text-muted small">Max</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="card h-100">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <span class="text-success">@Model.Device2.Name</span>
                            </h5>
                            <span class="badge @(Model.Device2.Status == "Online" ? "bg-success" : "bg-secondary")">
                                @Model.Device2.Status
                            </span>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <span class="text-muted">Location:</span> @Model.Device2.Location
                            </div>
                            <div class="mb-3">
                                <span class="text-muted">Last seen:</span> @Model.Device2.LastSeen.ToString("g")
                            </div>
                            
                            <div class="text-center p-3 bg-light rounded">
                                <h3 class="mb-0">@(Model.Device2Average?.ToString("F2") ?? "--") @Model.MetricDisplayName.Split(' ')[1]</h3>
                                <div class="text-muted">Average</div>
                            </div>
                            
                            <div class="mt-3 row text-center">
                                <div class="col-6">
                                    <div class="fw-bold">@(Model.Device2Min?.ToString("F2") ?? "--") @Model.MetricDisplayName.Split(' ')[1]</div>
                                    <div class="text-muted small">Min</div>
                                </div>
                                <div class="col-6">
                                    <div class="fw-bold">@(Model.Device2Max?.ToString("F2") ?? "--") @Model.MetricDisplayName.Split(' ')[1]</div>
                                    <div class="text-muted small">Max</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Comparison Chart</h5>
                </div>
                <div class="card-body">
                    <div style="height: 350px;">
                        <canvas id="comparisonChart"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Analysis</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6>Difference</h6>
                                <div class="d-flex align-items-center">
                                    <div class="display-6 me-2">@Model.Difference.ToString("F2")</div>
                                    <div class="text-muted">@Model.MetricDisplayName.Split(' ')[1]</div>
                                </div>
                                <div class="text-muted">
                                    Absolute difference between averages
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <h6>Percentage Difference</h6>
                                <div class="d-flex align-items-center">
                                    <div class="display-6 me-2">@Model.PercentageDifference.ToString("F1")</div>
                                    <div class="text-muted">%</div>
                                </div>
                                <div class="text-muted">
                                    Relative to @Model.Device1.Name
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <h6>Observations</h6>
                        <ul class="list-group">
                            @if (Model.Difference < 0.5)
                            {
                                <li class="list-group-item">
                                    <i class="bi bi-check-circle-fill text-success me-2"></i>
                                    The @Model.SelectedMetric readings between these two devices are very similar (less than 0.5 @Model.MetricDisplayName.Split(' ')[1] difference).
                                </li>
                            }
                            else if (Model.Difference < 2)
                            {
                                <li class="list-group-item">
                                    <i class="bi bi-info-circle-fill text-primary me-2"></i>
                                    There is a small difference in @Model.SelectedMetric between these devices (less than 2 @Model.MetricDisplayName.Split(' ')[1] difference).
                                </li>
                            }
                            else
                            {
                                <li class="list-group-item">
                                    <i class="bi bi-exclamation-triangle-fill text-warning me-2"></i>
                                    There is a significant difference in @Model.SelectedMetric between these devices (@Model.Difference.ToString("F1") @Model.MetricDisplayName.Split(' ')[1] difference).
                                </li>
                            }
                            
                            @if (Model.Device1.Location != Model.Device2.Location)
                            {
                                <li class="list-group-item">
                                    <i class="bi bi-geo-alt-fill text-primary me-2"></i>
                                    These devices are in different locations, which may explain some of the differences in readings.
                                </li>
                            }
                            
                            @{
                                var suggestions = new List<string>();
                                
                                if (Model.SelectedMetric == "temperature")
                                {
                                    if (Model.Difference >= 5)
                                    {
                                        suggestions.Add("The temperature difference is quite significant. Check for environmental factors that might be affecting one of the hives (direct sunlight, wind exposure, etc.).");
                                    }
                                }
                                else if (Model.SelectedMetric == "humidity")
                                {
                                    if (Model.Difference >= 10)
                                    {
                                        suggestions.Add("The humidity difference is substantial. This could be due to differences in ventilation, location moisture levels, or colony size.");
                                    }
                                }
                                else if (Model.SelectedMetric == "weight")
                                {
                                    if (Model.Difference >= 3)
                                    {
                                        suggestions.Add("The weight difference could indicate different colony sizes, honey production rates, or food consumption patterns.");
                                    }
                                }
                                
                                foreach (var suggestion in suggestions)
                                {
                                    <li class="list-group-item">
                                        <i class="bi bi-lightbulb-fill text-warning me-2"></i>
                                        @suggestion
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/chart.js/chart.umd.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.getElementById('comparisonChart').getContext('2d');
            
            // Format chart data
            const labels = @Html.Raw(Json.Serialize(Model.ChartLabels));
            const device1Data = @Html.Raw(Json.Serialize(Model.Device1MetricData));
            const device2Data = @Html.Raw(Json.Serialize(Model.Device2MetricData));
            
            // Create chart
            const comparisonChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: '@Model.Device1.Name',
                            data: device1Data,
                            borderColor: 'rgb(59, 130, 246)', // blue
                            backgroundColor: 'rgba(59, 130, 246, 0.1)',
                            tension: 0.4,
                            fill: false,
                            pointRadius: 0.5,
                            pointHoverRadius: 5
                        },
                        {
                            label: '@Model.Device2.Name',
                            data: device2Data,
                            borderColor: 'rgb(16, 185, 129)', // green
                            backgroundColor: 'rgba(16, 185, 129, 0.1)',
                            tension: 0.4,
                            fill: false,
                            pointRadius: 0.5,
                            pointHoverRadius: 5
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            ticks: {
                                maxTicksLimit: 10
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: '@Model.MetricDisplayName'
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        },
                        legend: {
                            position: 'top'
                        }
                    }
                }
            });
        });
    </script>
} 