@model BuzzWatch.Web.Models.AlertsViewModel
@{
    ViewData["Title"] = "Alerts";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Alerts</h1>
        @if (Model.ActiveAlerts > 0)
        {
            <form asp-action="ResolveAll" method="post" onsubmit="return confirm('Are you sure you want to resolve all active alerts?');">
                <button type="submit" class="btn btn-outline-success">
                    <i class="bi bi-check-all me-1"></i> Resolve All
                </button>
            </form>
        }
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Alert Summary</h5>
                    <div class="mt-3">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Active:</span>
                            <span class="badge bg-danger">@Model.ActiveAlerts</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Acknowledged:</span>
                            <span class="badge bg-warning">@Model.AcknowledgedAlerts</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Resolved:</span>
                            <span class="badge bg-success">@Model.ResolvedAlerts</span>
                        </div>
                        <hr />
                        <div class="d-flex justify-content-between mb-2">
                            <span>High Severity:</span>
                            <span class="badge bg-danger">@Model.HighSeverityAlerts</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Medium Severity:</span>
                            <span class="badge bg-warning">@Model.MediumSeverityAlerts</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Low Severity:</span>
                            <span class="badge bg-info">@Model.LowSeverityAlerts</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Filter Alerts</h5>
                    <form asp-action="Index" method="get" class="mt-3">
                        <div class="row">
                            <div class="col-md-5 mb-3">
                                <label for="severity" class="form-label">Severity</label>
                                <select name="severity" id="severity" class="form-select">
                                    @foreach (var option in Model.SeverityFilterOptions)
                                    {
                                        <option value="@option.Value" selected="@(option.Value == Model.SelectedSeverity)">@option.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-5 mb-3">
                                <label for="status" class="form-label">Status</label>
                                <select name="status" id="status" class="form-select">
                                    @foreach (var option in Model.StatusFilterOptions)
                                    {
                                        <option value="@option.Value" selected="@(option.Value == Model.SelectedStatus)">@option.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-2 d-flex align-items-end mb-3">
                                <button type="submit" class="btn btn-primary w-100">Filter</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span>@Model.TotalAlerts Alerts</span>
            <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-clockwise me-1"></i> Refresh
            </a>
        </div>
        <div class="card-body p-0">
            @if (Model.Alerts.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Severity</th>
                                <th>Device</th>
                                <th>Message</th>
                                <th>Time</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var alert in Model.Alerts.OrderByDescending(a => a.Timestamp))
                            {
                                string severityClass = alert.Severity switch
                                {
                                    "High" => "text-bg-danger",
                                    "Medium" => "text-bg-warning",
                                    "Low" => "text-bg-info",
                                    _ => "text-bg-secondary"
                                };
                                
                                string statusClass = alert.Status switch
                                {
                                    "Active" => "text-bg-danger",
                                    "Acknowledged" => "text-bg-warning",
                                    "Resolved" => "text-bg-success",
                                    _ => "text-bg-secondary"
                                };
                                
                                <tr id="alert-@alert.Id">
                                    <td>
                                        <span class="badge @severityClass">@alert.Severity</span>
                                    </td>
                                    <td>
                                        <a href="@Url.Action("DeviceDetails", "Dashboard", new { id = alert.DeviceId })">
                                            @Model.GetDeviceName(alert.DeviceId)
                                        </a>
                                    </td>
                                    <td>@alert.Message</td>
                                    <td>@alert.Timestamp.ToLocalTime().ToString("MMM dd, HH:mm")</td>
                                    <td>
                                        <span class="badge @statusClass">@alert.Status</span>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            @if (alert.Status == "Active")
                                            {
                                                <form asp-action="Acknowledge" asp-route-id="@alert.Id" method="post" class="d-inline me-1">
                                                    <button type="submit" class="btn btn-outline-warning" title="Acknowledge">
                                                        <i class="bi bi-hand-thumbs-up"></i>
                                                    </button>
                                                </form>
                                                <form asp-action="Resolve" asp-route-id="@alert.Id" method="post" class="d-inline">
                                                    <button type="submit" class="btn btn-outline-success" title="Resolve">
                                                        <i class="bi bi-check-lg"></i>
                                                    </button>
                                                </form>
                                            }
                                            @if (alert.Status == "Acknowledged")
                                            {
                                                <form asp-action="Resolve" asp-route-id="@alert.Id" method="post" class="d-inline">
                                                    <button type="submit" class="btn btn-outline-success" title="Resolve">
                                                        <i class="bi bi-check-lg"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center p-5">
                    <i class="bi bi-shield-check display-1 text-success"></i>
                    <p class="mt-3">No alerts found that match your filter criteria.</p>
                    @if (!string.IsNullOrEmpty(Model.SelectedSeverity) || !string.IsNullOrEmpty(Model.SelectedStatus))
                    {
                        <a href="@Url.Action("Index")" class="btn btn-outline-primary mt-2">
                            <i class="bi bi-funnel me-1"></i> Clear Filters
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Highlight newly added alerts for better visibility
        document.addEventListener('DOMContentLoaded', function() {
            // This would be connected to real-time notifications in a complete implementation
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/hubs/alerts")
                .withAutomaticReconnect()
                .build();
                
            connection.on("ReceiveAlert", (alert) => {
                // Refresh the page or update the UI when new alerts come in
                console.log('Received new alert', alert);
                
                // In a real implementation, we could add it to the table dynamically
                // or show a notification to refresh the page
            });
            
            // Start the connection
            connection.start().catch(err => console.error(err));
            
            // Auto-refresh the page every 60 seconds to show new alerts
            // This could be removed once real-time updates are properly implemented
            setTimeout(() => {
                window.location.reload();
            }, 60000);
        });
    </script>
} 