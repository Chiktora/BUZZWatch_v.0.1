@model BuzzWatch.Web.Models.NotificationListViewModel
@{
    ViewData["Title"] = "Notifications";
}

<div class="container">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Notifications</h4>
            <div>
                @if (Model.UnreadCount > 0)
                {
                    <form asp-action="MarkAllAsRead" method="post" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-check-all me-1"></i> Mark All as Read
                        </button>
                    </form>
                }
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Notifications.Any())
            {
                <div class="list-group list-group-flush">
                    @foreach (var notification in Model.Notifications.OrderByDescending(n => n.Timestamp))
                    {
                        <div class="list-group-item @(notification.IsRead ? "" : "bg-light")" id="notification-@notification.Id">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1 d-flex align-items-center">
                                    @{
                                        var iconClass = notification.Type switch
                                        {
                                            BuzzWatch.Web.Models.NotificationType.Info => "bi bi-info-circle text-primary",
                                            BuzzWatch.Web.Models.NotificationType.Warning => "bi bi-exclamation-triangle text-warning",
                                            BuzzWatch.Web.Models.NotificationType.Alert => "bi bi-exclamation-circle text-danger",
                                            BuzzWatch.Web.Models.NotificationType.Success => "bi bi-check-circle text-success",
                                            _ => "bi bi-bell text-secondary"
                                        };
                                    }
                                    <i class="@iconClass me-2"></i>
                                    @notification.Title
                                </h5>
                                <small class="text-muted">@notification.Timestamp.ToLocalTime().ToString("MMM dd, HH:mm")</small>
                            </div>
                            <p class="mb-1">@notification.Message</p>
                            @if (!string.IsNullOrEmpty(notification.DeviceName))
                            {
                                <small class="text-muted">Device: @notification.DeviceName</small>
                            }
                            <div class="d-flex mt-2">
                                @if (!string.IsNullOrEmpty(notification.Url))
                                {
                                    <a href="@notification.Url" class="btn btn-sm btn-outline-primary me-2">
                                        <i class="bi bi-arrow-right"></i> View
                                    </a>
                                }
                                @if (!notification.IsRead)
                                {
                                    <form asp-action="MarkAsRead" asp-route-id="@notification.Id" method="post" class="me-2">
                                        <button type="submit" class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-check"></i> Mark as Read
                                        </button>
                                    </form>
                                }
                                <form asp-action="Delete" asp-route-id="@notification.Id" method="post">
                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                            onclick="return confirm('Are you sure you want to delete this notification?')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center p-5">
                    <i class="bi bi-bell-slash fs-1 text-secondary"></i>
                    <p class="mt-3">No notifications yet.</p>
                    <p class="text-muted">When you receive alerts or important updates, they'll appear here.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Update the unread counter in navbar
        document.addEventListener('DOMContentLoaded', function() {
            updateNotificationBadge(0);
        });
    </script>
} 