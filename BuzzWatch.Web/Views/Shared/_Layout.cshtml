<!DOCTYPE html>
<html lang="en" class="dark:bg-gray-900" id="html-element">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BuzzWatch</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BuzzWatch.Web.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <style>
        :root {
            --primary-color: #ffc107;
            --secondary-color: #212529;
            --accent-color: #f8f9fa;
            --text-color: #212529;
            --bg-color: #f8f9fa;
            --card-bg: #ffffff;
            --border-color: rgba(0,0,0,0.125);
        }
        
        [data-theme="dark"] {
            --primary-color: #ffc107;
            --secondary-color: #121212;
            --accent-color: #2d2d2d;
            --text-color: #e9e9e9;
            --bg-color: #1a1a1a;
            --card-bg: #2d2d2d;
            --border-color: rgba(255,255,255,0.1);
        }
        
        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        
        .navbar {
            background-color: var(--secondary-color) !important;
            padding: 0.75rem 1rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .navbar-brand {
            color: var(--primary-color) !important;
            font-weight: bold;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
        }
        
        .brand-icon {
            color: var(--primary-color);
            margin-right: 0.5rem;
            font-size: 1.8rem;
        }
        
        .nav-link {
            color: rgba(255,255,255,0.8) !important;
            margin-right: 10px;
            padding: 8px 15px;
            border-radius: 6px;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
        }
        
        .nav-link:hover {
            background-color: rgba(255,255,255,0.1);
            color: #fff !important;
        }
        
        .nav-link.active {
            background-color: rgba(255,255,255,0.15);
            color: var(--primary-color) !important;
            font-weight: 500;
        }
        
        .nav-link i {
            margin-right: 0.5rem;
        }
        
        .user-section {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .notification-btn {
            position: relative;
            background: transparent;
            border: none;
            color: rgba(255,255,255,0.8);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }
        
        .notification-btn:hover {
            background-color: rgba(255,255,255,0.1);
            color: #fff;
        }
        
        .notification-badge {
            position: absolute;
            top: 0;
            right: 0;
            background-color: #dc3545;
            color: white;
            border-radius: 50%;
            font-size: 0.7rem;
            padding: 0.15rem 0.4rem;
            min-width: 1.2rem;
            transform: translate(30%, -30%);
        }
        
        .notification-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            width: 320px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            z-index: 1000;
            overflow: hidden;
            transition: all 0.3s ease;
            margin-top: 0.5rem;
        }
        
        .card {
            border-radius: 10px;
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            margin-bottom: 20px;
            background-color: var(--card-bg);
            color: var(--text-color);
        }
        
        .card-header {
            background-color: var(--card-bg);
            border-bottom: 1px solid var(--border-color);
            font-weight: 600;
            border-radius: 10px 10px 0 0 !important;
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: var(--secondary-color);
            font-weight: 500;
        }
        
        .btn-primary:hover {
            background-color: #e6ac00;
            border-color: #e6ac00;
            color: var(--secondary-color);
        }
        
        main {
            flex: 1;
        }
        
        .footer {
            background-color: var(--secondary-color);
            color: rgba(255,255,255,0.7) !important;
            padding: 1.5rem 0;
            margin-top: auto;
        }
        
        .footer a {
            color: var(--primary-color) !important;
        }
        
        .admin-badge {
            background-color: var(--primary-color);
            color: var(--secondary-color);
            font-weight: 600;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            margin-left: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.25rem;
            border: none;
        }
        
        .admin-badge:hover, .admin-badge:focus {
            background-color: #e6ac00;
            color: var(--secondary-color);
        }
        
        .admin-badge::after {
            margin-left: 0.5rem;
        }
        
        .dropdown-menu {
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            border-radius: 0.5rem;
        }
        
        .dropdown-item {
            padding: 0.5rem 1rem;
            display: flex;
            align-items: center;
        }
        
        .dropdown-item:hover, .dropdown-item:focus {
            background-color: rgba(255, 193, 7, 0.1);
        }
        
        .logout-btn {
            background-color: transparent;
            color: rgba(255,255,255,0.8);
            border: 1px solid rgba(255,255,255,0.2);
            border-radius: 4px;
            padding: 0.35rem 0.75rem;
            display: flex;
            align-items: center;
            transition: all 0.2s ease;
        }
        
        .logout-btn:hover {
            background-color: rgba(255,255,255,0.1);
            color: #fff;
        }
        
        .user-info {
            color: rgba(255,255,255,0.9);
            display: flex;
            align-items: center;
            font-size: 0.9rem;
        }
        
        .user-info i {
            margin-right: 0.5rem;
            font-size: 1.1rem;
        }
        
        .btn-icon {
            position: relative;
            background: transparent;
            border: none;
            color: rgba(255,255,255,0.8);
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }
        
        .btn-icon:hover {
            background-color: rgba(255,255,255,0.1);
            color: #fff;
        }
        
        .btn-icon i {
            font-size: 1.2rem;
        }
        
        @* Use escape syntax for CSS media queries in Razor *@
        @@media (max-width: 767.98px) {
            .navbar-collapse {
                background-color: var(--secondary-color);
                padding: 1rem;
                border-radius: 0.5rem;
                margin-top: 0.5rem;
            }
            
            .user-section {
                margin-top: 1rem;
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }
            
            .notification-dropdown {
                position: fixed;
                top: 60px;
                right: 10px;
                width: calc(100% - 20px);
                max-width: 320px;
            }
            
            .card-header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .card-header .widget-controls {
                margin-top: 0.5rem;
                align-self: flex-end;
            }
        }
        
        @@media (max-width: 576px) {
            .dashboard-widget {
                grid-column: span 12 !important;
            }
            
            .container {
                padding-left: 10px;
                padding-right: 10px;
            }
            
            .footer {
                text-align: center;
            }
            
            .footer .d-flex {
                flex-direction: column;
                gap: 0.5rem;
            }
        }
    </style>
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-md navbar-dark mb-4">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-hexagon-fill brand-icon"></i>BuzzWatch
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-md-flex justify-content-between">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" ? "active" : "")" 
                                asp-area="" asp-controller="Home" asp-action="Index">
                                <i class="bi bi-house"></i>Home
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Dashboard" ? "active" : "")" 
                                asp-area="" asp-controller="Dashboard" asp-action="Index">
                                <i class="bi bi-speedometer2"></i>Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Alerts" ? "active" : "")" 
                                asp-area="" asp-controller="Alerts" asp-action="Index">
                                <i class="bi bi-exclamation-triangle"></i>Alerts
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Analytics" ? "active" : "")" 
                                asp-area="" asp-controller="Analytics" asp-action="Index">
                                <i class="bi bi-graph-up"></i>Analytics
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Notifications" ? "active" : "")" 
                                asp-area="" asp-controller="Notifications" asp-action="Index">
                                <i class="bi bi-bell"></i>Notifications
                            </a>
                        </li>
                    </ul>
                    <div class="user-section">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <div class="d-flex align-items-center me-3">
                                <button id="theme-toggle" class="btn-icon" title="Toggle dark mode">
                                    <i class="bi bi-sun-fill" id="theme-icon"></i>
                                </button>
                            </div>
                            <div class="position-relative me-2">
                                @await Component.InvokeAsync("NotificationCenter")
                            </div>
                            <div class="d-flex align-items-center">
                                <div class="user-info me-3">
                                    <i class="bi bi-person-circle"></i>
                                    <span>@(User.Identity?.Name ?? "User")</span>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="dropdown d-inline-block ms-2">
                                            <button class="admin-badge dropdown-toggle" type="button" id="adminDropdownBtn" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="bi bi-gear-fill"></i>
                                                <span>Admin</span>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="adminDropdownBtn">
                                                <li><a class="dropdown-item" href="/Admin/Dashboard"><i class="bi bi-speedometer2 me-2"></i>Admin Dashboard</a></li>
                                                <li><a class="dropdown-item" href="/Admin/Users"><i class="bi bi-people me-2"></i>User Management</a></li>
                                                <li><a class="dropdown-item" href="/Admin/Devices"><i class="bi bi-cpu me-2"></i>Device Management</a></li>
                                                <li><a class="dropdown-item" href="/Admin/Settings"><i class="bi bi-sliders me-2"></i>Settings</a></li>
                                            </ul>
                                        </div>
                                    }
                                    <div class="dropdown d-inline-block ms-2">
                                        <button class="btn btn-sm btn-outline-light dropdown-toggle" type="button" id="userDropdownBtn" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bi bi-person-fill"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdownBtn">
                                            <li><a class="dropdown-item" asp-controller="Account" asp-action="Preferences"><i class="bi bi-sliders me-2"></i>Preferences</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <form asp-controller="Account" asp-action="Logout" class="dropdown-item p-0">
                                                    <button type="submit" class="btn btn-link text-decoration-none dropdown-item">
                                                        <i class="bi bi-box-arrow-right me-2"></i>Logout
                                                    </button>
                                                </form>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <a class="btn btn-outline-light" asp-controller="Account" asp-action="Login">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Login
                            </a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer text-light">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div>&copy; 2023 - BuzzWatch - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a></div>
                <div>
                    <i class="bi bi-hexagon-fill me-2"></i>Beehive Monitoring System
                </div>
            </div>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    @if (TempData["JwtToken"] != null)
    {
        <script>
            // Store JWT token for SignalR usage
            sessionStorage.setItem('jwtToken', '@TempData["JwtToken"]');
            console.log('JWT token stored in session storage');
        </script>
    }
    
    @await RenderSectionAsync("Scripts", required: false)
    
    <script>
        // Dark mode / theme functionality
        document.addEventListener('DOMContentLoaded', function() {
            const themeToggle = document.getElementById('theme-toggle');
            const themeIcon = document.getElementById('theme-icon');
            const htmlElement = document.documentElement;
            
            // Check for saved theme preference or use preferred color scheme
            const savedTheme = localStorage.getItem('buzzwatch-theme');
            const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            
            // Set initial theme
            if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
                document.documentElement.setAttribute('data-theme', 'dark');
                htmlElement.classList.add('dark');
                themeIcon.classList.replace('bi-sun-fill', 'bi-moon-fill');
            }
            
            // Theme toggle functionality
            if (themeToggle) {
                themeToggle.addEventListener('click', function() {
                    const currentTheme = document.documentElement.getAttribute('data-theme');
                    
                    if (currentTheme === 'dark') {
                        document.documentElement.removeAttribute('data-theme');
                        htmlElement.classList.remove('dark');
                        localStorage.setItem('buzzwatch-theme', 'light');
                        themeIcon.classList.replace('bi-moon-fill', 'bi-sun-fill');
                    } else {
                        document.documentElement.setAttribute('data-theme', 'dark');
                        htmlElement.classList.add('dark');
                        localStorage.setItem('buzzwatch-theme', 'dark');
                        themeIcon.classList.replace('bi-sun-fill', 'bi-moon-fill');
                    }
                    
                    // Dispatch event for components that need to know about the change
                    document.dispatchEvent(new CustomEvent('colorSchemeChange'));
                });
            }
            
            // Load user preferences (layout, widgets, etc.)
            function loadUserPreferences() {
                // Try to load user preferences from localStorage
                const userPrefs = localStorage.getItem('buzzwatch-preferences');
                
                if (userPrefs) {
                    try {
                        const prefs = JSON.parse(userPrefs);
                        
                        // Apply dashboard layout if on dashboard page
                        if (prefs.dashboardLayout && window.location.pathname.includes('/Dashboard')) {
                            const container = document.getElementById('widgets-container');
                            if (container) {
                                if (prefs.dashboardLayout === 'list') {
                                    container.classList.add('dashboard-layout-list');
                                    document.getElementById('layout-list')?.classList.add('active');
                                    document.getElementById('layout-grid')?.classList.remove('active');
                                }
                            }
                        }
                        
                        // Apply any other preferences here
                    } catch (e) {
                        console.error('Error parsing user preferences', e);
                    }
                }
            }
            
            // Save user preferences
            window.saveBuzzWatchPreferences = function(preferences) {
                const currentPrefs = localStorage.getItem('buzzwatch-preferences') 
                    ? JSON.parse(localStorage.getItem('buzzwatch-preferences')) 
                    : {};
                
                // Merge with existing preferences
                const updatedPrefs = { ...currentPrefs, ...preferences };
                localStorage.setItem('buzzwatch-preferences', JSON.stringify(updatedPrefs));
                
                console.log('User preferences saved', updatedPrefs);
                return updatedPrefs;
            };
            
            // Load preferences on page load
            loadUserPreferences();
        });
    </script>
</body>
</html>

