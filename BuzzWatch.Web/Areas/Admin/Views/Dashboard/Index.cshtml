@model BuzzWatch.Web.Areas.Admin.Controllers.AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body d-flex">
                <div class="me-3">
                    <div class="p-3 rounded-circle bg-warning bg-opacity-25">
                        <i class="bi bi-people text-warning fs-3"></i>
                    </div>
                </div>
                <div>
                    <h5 class="card-title">Total Users</h5>
                    <h3 class="mb-0">@Model.TotalUsers</h3>
                    <div class="small text-muted">Registered accounts</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body d-flex">
                <div class="me-3">
                    <div class="p-3 rounded-circle bg-primary bg-opacity-25">
                        <i class="bi bi-hdd-rack text-primary fs-3"></i>
                    </div>
                </div>
                <div>
                    <h5 class="card-title">Total Devices</h5>
                    <h3 class="mb-0">@Model.TotalDevices</h3>
                    <div class="small text-muted">Active beehive monitors</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body d-flex">
                <div class="me-3">
                    <div class="p-3 rounded-circle bg-danger bg-opacity-25">
                        <i class="bi bi-exclamation-triangle text-danger fs-3"></i>
                    </div>
                </div>
                <div>
                    <h5 class="card-title">Active Alerts</h5>
                    <h3 class="mb-0">@Model.ActiveAlerts</h3>
                    <div class="small text-muted">Unresolved issues</div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">Sensor Readings (Last 24 Hours)</div>
            <div class="card-body">
                <canvas id="sensorReadingsChart" height="250"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">Device Status</div>
            <div class="card-body">
                <canvas id="deviceStatusChart" height="250"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Alert Trends (Last 7 Days)</div>
            <div class="card-body">
                <canvas id="alertTrendsChart" height="250"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">User Activity (Last 7 Days)</div>
            <div class="card-body">
                <canvas id="userActivityChart" height="250"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>Device Status</div>
                <div>
                    <a asp-controller="Devices" asp-action="Create" class="btn btn-sm btn-primary">
                        <i class="bi bi-plus-circle me-1"></i> Add New Device
                    </a>
                </div>
            </div>
            <div class="card-body">
                @if (Model.Devices != null && Model.Devices.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Location</th>
                                    <th>Last Reading</th>
                                    <th>Status</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var device in Model.Devices)
                                {
                                    <tr>
                                        <td>@device.Name</td>
                                        <td>@device.Location</td>
                                        <td>@device.LastReading.ToString("g")</td>
                                        <td>
                                            @if (device.IsOnline)
                                            {
                                                <span class="badge bg-success">Online</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Offline</span>
                                            }
                                        </td>
                                        <td class="text-end">
                                            <a asp-controller="Devices" asp-action="Details" asp-route-id="@device.Id" class="btn btn-sm btn-outline-secondary">Details</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center p-4">
                        <i class="bi bi-hdd-rack fs-1 text-secondary"></i>
                        <p class="mt-2">No devices configured yet</p>
                        <a asp-controller="Devices" asp-action="Create" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-1"></i> Add Your First Device
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header">Recent Alerts</div>
            <div class="card-body">
                @if (Model.RecentAlerts != null && Model.RecentAlerts.Any())
                {
                    <div class="list-group list-group-flush">
                        @foreach (var alert in Model.RecentAlerts)
                        {
                            <div class="list-group-item border-0 px-0">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">@alert.DeviceName</h6>
                                    <small class="text-@(alert.IsResolved ? "success" : "danger")">
                                        @(alert.IsResolved ? "Resolved" : "Active")
                                    </small>
                                </div>
                                <p class="mb-1">@alert.Message</p>
                                <small class="text-muted">@alert.StartTime.ToString("g")</small>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center p-4">
                        <i class="bi bi-check-circle fs-1 text-success"></i>
                        <p class="mt-2">No active alerts</p>
                    </div>
                }
            </div>
        </div>
        
        @await Component.InvokeAsync("RecentAuditLogs", new { count = 5 })
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        // Device Status Chart
        new Chart(document.getElementById('deviceStatusChart'), {
            type: 'doughnut',
            data: @Html.Raw(Json.Serialize(Model.DeviceStatusChart)),
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
        
        // Alert Trends Chart
        new Chart(document.getElementById('alertTrendsChart'), {
            type: 'line',
            data: @Html.Raw(Json.Serialize(Model.AlertTrendsChart)),
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });
        
        // User Activity Chart
        new Chart(document.getElementById('userActivityChart'), {
            type: 'bar',
            data: @Html.Raw(Json.Serialize(Model.UserActivityChart)),
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        
        // Sensor Readings Chart
        new Chart(document.getElementById('sensorReadingsChart'), {
            type: 'line',
            data: @Html.Raw(Json.Serialize(Model.SensorReadingsChart)),
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                scales: {
                    'y-temperature': {
                        position: 'left',
                        title: {
                            display: true,
                            text: 'Temperature (°C)'
                        }
                    },
                    'y-humidity': {
                        position: 'right',
                        title: {
                            display: true,
                            text: 'Humidity (%)'
                        }
                    }
                }
            }
        });
    </script>
} 